import type { GetStaticProps, NextPage } from "next";
import {  HeaderMain, VodThumbnails } from "~/components";
import Head from "next/head";
import { api } from "~/utils/api";
const BrowsePage: NextPage = () => {

  const videoThumbs = api.video.getAll.useQuery().data
  return (
    <>
      <Head>
        <title>Browse Vods</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="max-h-screen min-h-screen ">
      <HeaderMain toggleSearch={true}/>
      <div className="mx-10 " >
      <h1 className="text-periwinkle-gray-500 text-3xl mb-5 underline-offset-8 underline">Top Vods:               </h1>
      <div className="grid grid-rows-1 ">

      <div className="flex w-[20%]">
      
      {videoThumbs && <VodThumbnails videos={videoThumbs} />}
      </div>
      <div className="flex  w-[20%]">
      
      {videoThumbs && <VodThumbnails videos={videoThumbs} />}
      </div>
      </div>
      </div>
      </main>
    </>
  );
};


import { createProxySSGHelpers } from '@trpc/react-query/ssg';
import { appRouter } from "~/server/api/root";
import superjson from "superjson";
import {prisma } from '~/server/db'
export const getStaticProps: GetStaticProps = async () => {
  
  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: {prisma, session: null},
    transformer: superjson, 
  });

  await ssg.video.getAll.prefetch()

  return {
    props:{
      trpcState:ssg.dehydrate()
    }
  }
}





export default BrowsePage;
